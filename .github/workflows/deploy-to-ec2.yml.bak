name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest # 깃허브의 ubuntu Runner 사용

    env: # 환경 변수 설정
      EC2_HOST: ${{ vars.EC2_HOST }}
      EC2_USER: ${{ vars.EC2_USER }}
      EC2_KEY: ${{ secrets.EC2_KEY }}

      PROJECT_NAME: ${{ github.event.repository.name }} # 프로젝트 이름을 환경 변수로 설정

    steps:
      - name: Checkout code # 소스코드 체크아웃
        uses: actions/checkout@v4

      - name: Set up Node.js # Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies for build
        run: npm install

      - name: Build Next.js app
        env:
          NEXT_PUBLIC_API_SERVER: ${{ vars.NEXT_PUBLIC_API_SERVER }}
          NEXT_PUBLIC_API_SERVER_CLIENT_ID: ${{ vars.NEXT_PUBLIC_API_SERVER_CLIENT_ID }}
          NEXT_PUBLIC_DELAY_TIME: ${{ vars.NEXT_PUBLIC_DELAY_TIME }}
          NEXT_PUBLIC_LIST_LIMIT: ${{ vars.NEXT_PUBLIC_LIST_LIMIT }}
          NEXT_PUBLIC_NEXT_SERVER: ${{ vars.NEXT_PUBLIC_NEXT_SERVER }}
          
        run: npm run build

      - name: Install dependencies for production
        run: npm prune --omit=dev

      - name: Compress build folder # 빌드 결과물 압축
        run: tar -czf ${{ github.event.repository.name }}.tar.gz package.json public node_modules .next next.config.mjs

      - name: Install SSH key # EC2 접속을 위한 SSH 키 생성
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ vars.EC2_HOST }} >> ~/.ssh/known_hosts
          echo "${{ secrets.EC2_KEY }}" > ec2_key.pem 
          chmod 600 ec2_key.pem

      - name: Create project directory on EC2 # EC2에 프로젝트명의 폴더 생성
        run: |
          ssh -i ec2_key.pem ${{ vars.EC2_USER }}@${{ vars.EC2_HOST }} << EOF
            mkdir -p /home/${{ vars.EC2_USER }}/${{ github.event.repository.name }}
          EOF

      - name: Copy files to EC2 # 압축한 빌드 파일 EC2에 업로드
        run: |
          scp -i ec2_key.pem ${{ github.event.repository.name }}.tar.gz ${{ vars.EC2_USER }}@${{ vars.EC2_HOST }}:/home/${{ vars.EC2_USER }}/${{ github.event.repository.name }}

      - name: Deploy on EC2 # EC2에 SSH 접속 후 배포 완료
        run: |
          ssh -i ec2_key.pem ${{ vars.EC2_USER }}@${{ vars.EC2_HOST }} << EOF
            cd /home/${{ vars.EC2_USER }}/${{ github.event.repository.name }}
            
            # 배포용 압축 파일을 현재 디렉토리에 풀기
            tar -xzf ${{ github.event.repository.name }}.tar.gz

            # 환경 변수를 .env 파일에 추가
            echo "API_KEY_GOOGLE=${{ secrets.API_KEY_GOOGLE }}" >> .env
            echo "AUTH_GITHUB_CLIENT_ID=${{ secrets.AUTH_GITHUB_CLIENT_ID }}" >> .env
            echo "AUTH_GITHUB_CLIENT_SECRET=${{ secrets.AUTH_GITHUB_CLIENT_SECRET }}" >> .env
            echo "AUTH_GOOGLE_CLIENT_ID=${{ secrets.AUTH_GOOGLE_CLIENT_ID }}" >> .env
            echo "AUTH_GOOGLE_CLIENT_SECRET=${{ secrets.AUTH_GOOGLE_CLIENT_SECRET }}" >> .env
            echo "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" >> .env

            # 프로세스 재시작
            pm2 restart next-level || pm2 start npm --name "next-level" -- start
            pm2 save
          EOF
